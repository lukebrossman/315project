	Our team had three primary goals for the alpha prototype. The first was to create an initial machine learning model that would allow the material research lab to see how the impurity profiles of their crystals were affecting those crystals performance. This model also needed to be flexible enough to allow the researchers to explore secondary goals like determining what effect the variables in the manufacturing process were resulting in specific impurities. Being that performance is a continuous valued metric, we decided to implement a linear regression model. This is the most straightforward of regression models, calculating an output based on a weighted, linear combination of the inputs. We also implemented a single layer perceptron model, in the event that the materials research team wanted to evaluate performance in binary terms (“good” performance, vs “not good enough”). The single layer perceptron model was a natural choice as it also determines the output value based on a linear combination of the inputs.

	The second goal for this project was to provide the researchers with an interface that would allow them to run the machine learning algorithm with additional data, and customizable parameters. This goal became of crucial importance after it became clear that there did not yet exist the quantity of data needed to create a robust machine learning model. To implement the solution for this goal, our team decided on creating a web based application that would give the research team clear, and easy access to relevant parameters and capabilities for running the machine learning algorithm. A web hosted application was chosen for its many benefits with respect to the material research team. The primary benefit realized by using a web based user interface was the capability for any of the researchers to access and use our model from any machine with internet access. Additionally, performing the computations remotely prevented us from needing to create an executable file that would need to be installed on each machine it was to be used on, and needed to operate properly on any operating system. We decided to deploy the backend for this web application on the EECS servers because the space was already available for use by the school of engineering, and provided a default layer of security that requires users to be connected to the EECS servers. Initially we also believed that this would give us direct access to the spreadsheet that the researchers were using to monitor and store their data, but unfortunately this was not the case.

	Our web application allows the user to select the fields for the machine learning algorithm that will be used as the class labels and the features. This is achieved by displaying an imported dataset in a grid-view and providing the option to select each field individually. Our aim here was to allow the researchers maximum flexibility and control over the machine learning algorithm so that they can tune the results as they collect more data, or additional data-sets. In its alpha stage, the web application does not yet provide the controls to run or display the results of the linear optimization approach, but we have the framework to easily add that in the future.

	Finally we wanted to provide a direct connection between our application and the researchers data-set. This goal was important because it would remove a layer of complexity in using our application and would provide a form of “version control”, wherein a researcher would be unable to run an analysis on an outdated version of the data-set. Our team was unable to achieve this goal for the alpha prototype, due to a misunderstanding of how and where the data was actually stored. We had incorrectly assumed that the data was being maintained on the EECS servers, and that with the proper credentials, we would have direct access to it via our backend that was deployed on the same servers. In reality, the researchers dataset is located on a network drive that is not connected to the school servers. While this drive will require a bit more legwork to connect with our application, we still believe it is achievable and intend to implement this connection in the future.
